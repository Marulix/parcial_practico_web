{
	"info": {
		"_postman_id": "dae4e0bc-389b-4ee5-a659-b138c7aa3cb9",
		"name": "Airline - Airport",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30845479"
	},
	"item": [
		{
			"name": "Add an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"idAirline\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Airline Name\",\n  \"description\": \"Airline Description\",\n  \"foundationDate\": \"2022-01-01\",\n  \"webPage\": \"https://www.airlinewebsite.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": [
				{
					"name": "Add an airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Airline Name\",\n  \"description\": \"Airline Description\",\n  \"foundationDate\": \"2022-01-01\",\n  \"webPage\": \"https://www.airlinewebsite.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Airline Name\",\n    \"description\": \"Airline Description\",\n    \"foundationDate\": \"2022-01-01\",\n    \"webPage\": \"https://www.airlinewebsite.com\",\n    \"id\": \"5369094d-e8c4-4cdc-b40e-09a961cdaff5\"\n}"
				}
			]
		},
		{
			"name": "Add an airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"idAirport\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Airport Name\",\n  \"code\": \"AIR\",\n  \"country\": \"Country Name\",\n  \"city\": \"City Name\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Airport Name\",\n  \"code\": \"AIR\",\n  \"country\": \"Country Name\",\n  \"city\": \"City Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Airport Name\",\n    \"code\": \"AIR\",\n    \"country\": \"Country Name\",\n    \"city\": \"City Name\",\n    \"id\": \"75151a7e-905f-4af9-a97c-edba719f773f\"\n}"
				}
			]
		},
		{
			"name": "Add an airport 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"idAirport2\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Airport Name\",\n  \"code\": \"AIR\",\n  \"country\": \"Country Name\",\n  \"city\": \"City Name\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Airport Name\",\n  \"code\": \"AIR\",\n  \"country\": \"Country Name\",\n  \"city\": \"City Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Airport Name\",\n    \"code\": \"AIR\",\n    \"country\": \"Country Name\",\n    \"city\": \"City Name\",\n    \"id\": \"75151a7e-905f-4af9-a97c-edba719f773f\"\n}"
				}
			]
		},
		{
			"name": "Add an airport to a airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports",
						"{{idAirport}}"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport to a airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"0e98f17e-1dd0-4733-bb4d-71e6b523c6ce\",\r\n    \"name\": \"Airline Name\",\r\n    \"description\": \"Airline Description\",\r\n    \"foundationDate\": \"2022-01-01T05:00:00.000Z\",\r\n    \"webPage\": \"https://www.airlinewebsite.com\",\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"71ff4656-3f16-4a1a-b2f1-4b615a13fbba\",\r\n            \"name\": \"Airport Name\",\r\n            \"code\": \"AIR\",\r\n            \"country\": \"Country Name\",\r\n            \"city\": \"City Name\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Add an invalid airport to a airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid airport to a airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get all airports from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Get all airports from an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": \"71ff4656-3f16-4a1a-b2f1-4b615a13fbba\",\r\n        \"name\": \"Airport Name\",\r\n        \"code\": \"AIR\",\r\n        \"country\": \"Country Name\",\r\n        \"city\": \"City Name\"\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Get an airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports",
						"{{idAirport}}"
					]
				}
			},
			"response": [
				{
					"name": "Get an airport from an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"71ff4656-3f16-4a1a-b2f1-4b615a13fbba\",\r\n    \"name\": \"Airport Name\",\r\n    \"code\": \"AIR\",\r\n    \"country\": \"Country Name\",\r\n    \"city\": \"City Name\"\r\n}"
				}
			]
		},
		{
			"name": "Get a non associated airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports",
						"{{idAirport2}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a non associated airport from an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "Not Found",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El airport con el id dado no está asociado a la airline\"\n}"
				}
			]
		},
		{
			"name": "Update airports from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{idAirport2}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update airports from an airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": {{idAirport}}\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"nombre\": \"Ajiaco Santafereño\",\r\n    \"descripcion\": \"El ajiaco es el plato típico de Colombia específicamente de la ciudad de Santa Fe de Bogotá. Consiste en una sopa elaborada con las papas que se cultivan en sus tierras.\",\r\n    \"foto\": \"https://www.airlinesnestle.com.co/sites/default/files/srh_recipes/f78cf6630b31638994b09b3b470b085c.jpg\",\r\n    \"procesoPreparacion\": \"1.  Coloca en una ollto a cucharada de aceite, una vez caliente añade el ajo, cebolla y sofríelos ligeramente. Añade el agua y disuelve el Cubo Caldo de Gallina MAGGI®. Añade las hierbas picadas y lleva a hervir a fuego medio. Cocina el pollo y retíralo de la olla, deja enfriar y desmenuza el pollo en hilachas finas. 2.  Una vez retirado el pollo añade las papas cortadas en rodajas y el maíz. Cocina hasta que las papas hasta que se deshagan y el maíz este suave.3.  Deja hervir unos minutos, sirve la sopa con porciones de pollo desmechado, alcaparras y una cuchara de crema de leche en cada plato.\",\r\n    \"video\": \"https://youtu.be/R2DAkW3N_JY\",\r\n    \"culturaGastronomica\": {\r\n        \"id\": \"48a9ab90-1276-11ed-861d-0242ac120001\",\r\n        \"nombre\": \"Cultura gastronómica colombiana\",\r\n        \"descripcion\": \"En Colombia existen un sinnúmero de manifestaciones culturales que expresan la variedad étnica, religiosa, de costumbres, tradiciones y formas de vida de su población, así como su riqueza natural y diversidad de climas, geografías y paisajes, entre otros. La historia de la cultura colombiana es muy amplia y llena from an riqueza en todas sus áreas y especialidades. Desde la época de la conquista, cuando los primeros aborígenes convivieron entre sus costumbres, ritos y conocimientos naturales, la cultura hizo parte de los indios en aquel entonces.\"\r\n    },\r\n    \"airports\": [\r\n        {\r\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120001\",\r\n            \"nombre\": \"Cebolla\",\r\n            \"descripcion\": \"Allium cepa, comúnmente conocida como cebolla, es una planta herbácea bienal perteneciente a la familia de las amarilidáceas. Es la especie más cultivada del género Allium, el cual contiene varias especies que se denominan «cebollas» y que se cultivan como alimento.\",\r\n            \"historia\": \"La cebolla se sitúa entre las primeras plantas cultivadas. Su origen se sitúa en Asia Central. Más certeza se tiene en su entrada europea por los griegos y romanos.\",\r\n            \"categoria\": \"VERDURA\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Update invalid airports from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid airports from an airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": {{idAirport}}\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El airport con el id dado no existe\"\n}"
				}
			]
		},
		{
			"name": "Delete an airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports",
						"{{idAirport2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport from an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete a non associated airport from an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}",
						"airports",
						"{{idAirport}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport que no esté asociado to a airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}",
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El airport con el id dado no está asociado a la airline\"\n}"
				}
			]
		},
		{
			"name": "Delete an airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports/{{idAirport}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"{{idAirport}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an airport 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports/{{idAirport2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"{{idAirport2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/{{idAirport}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{idAirport}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{idAirline}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{idAirline}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{idAirline}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{idAirline}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	]
}